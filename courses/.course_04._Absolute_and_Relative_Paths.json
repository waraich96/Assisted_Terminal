{
  "name": "4. Absolute and Relative Paths",
  "classes": [
    {
      "title": "All files and folders bases off of the root directory, '/'",
      "text": "\n\rYou should notice, by now, that each path in Linux is built off of by forward-slashes, \n\r\"/\". You are in the /home/pi folder, which all bases off the \"root\" directory. \n\r\n\rThe \"root\" directory is the uppermost-level of the Linux filsystem. It is actually\n\rdenoted by a single forward-slash \"/\". Try changing directory to there: \"cd /\"\n\r\n\r",
      "wantedCommand": "cd /",
      "incorrect": "Change directory to the root directory: `cd /`."
    },
    {
      "title": "Check out the files in your directory with the `ls` command.",
      "text": "\n\rNow you've done this before, but you can check out all the different files that \n\rare in your current working directory, by running the `ls` command without any\n\rarguments. \n\r\n\r",
      "wantedCommand": "ls",
      "incorrect": "Run `ls` to \"list stuff\" in the current directory."
    },
    {
      "title": "You can explore all kinds of files and folders.",
      "text": "\n\rNow you can see all those folders, which build out a path -- other folders like\n\r\"/bin\", or \"/dev\", or \"/etc\" and the subdirectories in each one of those keep building\n\roff of each other with a subsequent forward slash.\n\r\n\rChange into the \"/sys\" directory. Do this with the command \"cd /sys\"\n\r\n\r",
      "wantedCommand": "cd /sys",
      "incorrect": "Change directory into the `/sys` folder with `cd /sys`."
    },
    {
      "title": "`ls` is a good command to run whenever you change directory.",
      "text": "\n\rYou see your prompt change, as usual? \n\r\n\rIt is a good habit to run `ls` once you move into a new directory so you know what\n\rfiles and folders you are currently working with. Run `ls` one more time.\n\r\n\r",
      "wantedCommand": "ls",
      "incorrect": "Run `ls` one more time."
    },
    {
      "title": "A relative path means you start from your current location",
      "text": "\n\rChange into that `fs` folder, using a RELATIVE PATH. Just supply the name of\n\rthe folder as the argument to the `cd` command. It should look like: `cd fs`\n\r\n\r",
      "wantedCommand": "cd fs",
      "incorrect": "`cd` into the `fs` folder using a relative pathl just run `cd fs`."
    },
    {
      "title": "Reminder: the root directory is / ",
      "text": "\n\rNow your path should be `/sys/fs`, with all of those folders that we just moved through\n\rseparated by those forward-slashes. You moved into this directory using what is called\n\ra RELATIVE PATH. Previously, you were in the `/sys` folder. Then you just said you \n\rwanted the \"fs\" folder, so Linux to move you RELATIVE to your current location in\n\rthe filesystem. \n\r\n\rWhen you are ready, change back to the root directory.\n\r\n\r",
      "wantedCommand": "cd /",
      "incorrect": "Remember, the root directory is just a \"/\". Please `cd` there."
    },
    {
      "title": "An absolute path means you write out the entire path, starting from /",
      "text": "\n\rNow, let's try moving back to that `/sys/fs`, but let's do it with an ABSOLUTE PATH\n\rrather than a relative path. All that means is typing out the whole path, all the way\n\rfrom the root directory. Try it!\n\r\n\r",
      "wantedCommand": "cd /sys/fs",
      "incorrect": "Use an absolute path. That means the whole thing: `cd /sys/fs`"
    },
    {
      "title": "Absolute path means all the way from /, relative means from .",
      "text": "\n\rNice! Check our prompt. You're in the same location you were before: `/sys/fs`.\n\rYou just got here a different way -- using an ABSOLUTE PATH, typing it all out,\n\rall the way from the root directory, rather than with just a RELATIVE PATH, from\n\rthe location you were currently in.\n\r"
    }
  ]
}
